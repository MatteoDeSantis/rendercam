
-- Manage buttons for switching to different test scenes, running tests, etc.

local rendercam = require "rendercam 2.rendercam"
local ButtonGroup = require "main.ButtonGroup"

local profilerIsEnabled = false

local scenes = {
	{ text = "run unit tests"},
	{ text = "run perf. tests"},
	{ text = "bounds"},
}

local buttonBaseX = 75
local buttonBaseY = rendercam.configH/2
local winCenterX = rendercam.configW/2
local buttonSpacingX = 125

local function getButtonPos(i)
	local pos = vmath.vector3(buttonBaseX, buttonBaseY, 0)
	pos.x = pos.x + (i-1) * buttonSpacingX
	return pos
end

local function activateButton(button)
	print(button.text, "activated")
end

function init(self)
	msg.post(".", "acquire_input_focus")

	local protoBtn = gui.get_node("button")
	self.buttons = ButtonGroup(protoBtn)

	for i,data in ipairs(scenes) do
		self.buttons:newButton(data.text, getButtonPos(i), i, activateButton)
	end

	gui.set_enabled(protoBtn, false)

	local topLine = gui.get_node("line top")
	local botLine = gui.get_node("line bottom")
	local bg = gui.get_node("buttons background")
	local pos = vmath.vector3(winCenterX, buttonBaseY, 0)
	gui.set_position(bg, pos)
	pos.y = buttonBaseY + 50
	gui.set_position(topLine, pos)
	pos.y = buttonBaseY - 50
	gui.set_position(botLine, pos)
end

function on_input(self, action_id, action)
	self.buttons:input(action_id, action)
	if action_id == hash("toggle profiler") and action.pressed then
		profilerIsEnabled = not profilerIsEnabled
		profiler.enable_ui(profilerIsEnabled)
	end
end
